name: Android

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'     
        required: true
        type: string
      # tag:
      #   description: 'Git Tag to checkout'
      #   required: true
      #   type: string

jobs:
  release:
    runs-on: macOS-15
    steps:

      # Checkout основного репозитория (в котором запускается workflow)
      - name: Checkout main repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Обеспечить полный клон репозитория

      # Checkout libXray в поддиректорию 'xray'
      - name: Checkout libXray
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Обеспечить полный клон репозитория
          repository: 'tozik/libXray'
          path: 'xray'
          # ref: ${{ github.event.inputs.tag }}

      # Clone Xray-Core
      - name: Clone Xray-Core
        run: |
          git clone https://github.com/XTLS/Xray-core.git xray/Xray-core
      # # Fix Xray-Core path
      - name: Adjust Xray-Core Path
        run: |
          ln -s "$(pwd)/xray/Xray-core" "$(pwd)/xray/../Xray-core"
      # # Debug directory structure
      - name: Debug Directory
        run: |
          echo "Current Directory: $(pwd)"
          echo "Root Directory Contents:"
          ls -la
          echo "xray Directory Contents:"
          ls -la xray
          echo "Xray-core Directory via SymLink:"
          ls -la xray/Xray-core
      # Setup Go environment
      - name: Setup Go
        uses: actions/setup-go@v3.5.0
        with:
          go-version: '1.22.4'

      # Prepare Go modules
      # go mod init github.com/XTLS/libXray
      # rm -f go.mod go.sum

      - name: Prepare GO
        run: |
          cd xray
          go mod tidy
      
      - name: Build Android Lib
        run: |
          cd xray
          python3 build/main.py android
          ls

      - name: Archive artifacts
        run: |
          cd xray
          mkdir output
          cp TunnelXVPNS.aar TunnelXVPNS-sources.jar output/
          zip -r artifacts.zip output/

      - name: Upload artifacts to workflow (optional)
        uses: actions/upload-artifact@v3
        with:
          name: android-artifacts
          path: xray/artifacts.zip

      # Если вы хотите создать релиз и загрузить артефакты как release assets:
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: xray/artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
      
